version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:15
    container_name: shareuptime-postgres
    environment:
      POSTGRES_DB: shareuptime
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432" # host:container (5433 to avoid conflict with local postgres)
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - shareuptime-network

  mongodb:
    image: mongo:7
    container_name: shareuptime-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - shareuptime-network

  neo4j:
    image: neo4j:5
    container_name: shareuptime-neo4j
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - shareuptime-network

  redis:
    image: redis:7-alpine
    container_name: shareuptime-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shareuptime-network

  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: shareuptime-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - shareuptime-network

  minio:
    image: minio/minio:latest
    container_name: shareuptime-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - shareuptime-network

  # Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: shareuptime-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - shareuptime-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: shareuptime-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - shareuptime-network

  # Microservices
  api-gateway:
    build: ./services/api-gateway
    container_name: shareuptime-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - auth-service
      - user-service
      - post-service
      - feed-service
      - media-service
    networks:
      - shareuptime-network

  auth-service:
    build: ./services/auth-service
    container_name: shareuptime-auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis
    networks:
      - shareuptime-network

  user-service:
    build: ./services/user-service
    container_name: shareuptime-user-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - POSTGRES_HOST=postgres
    depends_on:
      - neo4j
      - postgres
    networks:
      - shareuptime-network

  post-service:
    build: ./services/post-service
    container_name: shareuptime-post-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongodb:27017/shareuptime
      - POSTGRES_HOST=postgres
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - mongodb
      - postgres
      - kafka
    networks:
      - shareuptime-network

  feed-service:
    build: ./services/feed-service
    container_name: shareuptime-feed-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - redis
      - kafka
    networks:
      - shareuptime-network

  media-service:
    build: ./services/media-service
    container_name: shareuptime-media-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - MINIO_ENDPOINT=minio
      - POSTGRES_HOST=postgres
    depends_on:
      - minio
      - postgres
    networks:
      - shareuptime-network

  notification-service:
    build: ./services/notification-service
    container_name: shareuptime-notification-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - KAFKA_BROKERS=kafka:9092
      - REDIS_HOST=redis
    depends_on:
      - kafka
      - redis
    networks:
      - shareuptime-network

  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: shareuptime-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - shareuptime-network

  grafana:
    image: grafana/grafana:latest
    container_name: shareuptime-grafana
    ports:
      - "3007:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - shareuptime-network

volumes:
  postgres_data:
  mongodb_data:
  neo4j_data:
  redis_data:
  elasticsearch_data:
  minio_data:
  grafana_data:

networks:
  shareuptime-network:
    driver: bridge
