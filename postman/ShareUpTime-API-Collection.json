{
  "info": {
    "name": "ShareUpTime API Collection",
    "description": "Comprehensive API collection for ShareUpTime social media platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "description": "API Gateway base URL"
    },
    {
      "key": "accessToken",
      "value": "",
      "description": "JWT access token for authenticated requests"
    },
    {
      "key": "refreshToken",
      "value": "",
      "description": "JWT refresh token"
    },
    {
      "key": "userId",
      "value": "",
      "description": "Current user ID"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{accessToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "API Gateway Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check API Gateway health status"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Registration successful', () => {",
                  "        pm.expect(response).to.have.property('user');",
                  "        pm.expect(response).to.have.property('accessToken');",
                  "        pm.expect(response).to.have.property('refreshToken');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\",\n  \"username\": \"johndoe\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.refreshToken);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response).to.have.property('user');",
                  "        pm.expect(response).to.have.property('accessToken');",
                  "        pm.expect(response).to.have.property('refreshToken');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"securepassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Get current user profile information"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"bio\": \"Software developer passionate about social platforms\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Update user profile information"
          },
          "response": []
        },
        {
          "name": "Follow User",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/follow/:userId",
              "host": ["{{baseUrl}}"],
              "path": ["users", "follow", ":userId"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user-id-to-follow",
                  "description": "ID of the user to follow"
                }
              ]
            },
            "description": "Follow another user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Posts",
      "item": [
        {
          "name": "Create Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is my first post on ShareUpTime! ðŸš€\",\n  \"hashtags\": [\"firstpost\", \"socialmedia\", \"tech\"],\n  \"mentions\": [],\n  \"location\": {\n    \"latitude\": 40.7128,\n    \"longitude\": -74.0060,\n    \"name\": \"New York, NY\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/posts",
              "host": ["{{baseUrl}}"],
              "path": ["posts"]
            },
            "description": "Create a new post"
          },
          "response": []
        },
        {
          "name": "Get Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/posts/:postId",
              "host": ["{{baseUrl}}"],
              "path": ["posts", ":postId"],
              "variable": [
                {
                  "key": "postId",
                  "value": "post-id",
                  "description": "ID of the post to retrieve"
                }
              ]
            },
            "description": "Get a specific post by ID"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Feed",
      "item": [
        {
          "name": "Get User Timeline",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/feed?limit=20&offset=0",
              "host": ["{{baseUrl}}"],
              "path": ["feed"],
              "query": [
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Number of posts to return"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of posts to skip"
                }
              ]
            },
            "description": "Get user's personalized timeline"
          },
          "response": []
        }
      ]
    }
  ]
}